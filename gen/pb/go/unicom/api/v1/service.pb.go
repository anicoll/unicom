// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: unicom/api/v1/service.proto

package apiv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / Enum describing the schema/protocol for response channels.
type ResponseSchema int32

const (
	// Default value. Should not be used.
	ResponseSchema_RESPONSE_SCHEMA_UNSPECIFIED ResponseSchema = 0
	// HTTP endpoint for responses.
	ResponseSchema_RESPONSE_SCHEMA_HTTP ResponseSchema = 1
	// AWS SQS queue for responses.
	ResponseSchema_RESPONSE_SCHEMA_SQS ResponseSchema = 2
	// AWS EventBridge for responses.
	ResponseSchema_RESPONSE_SCHEMA_EVENT_BRIDGE ResponseSchema = 3
)

// Enum value maps for ResponseSchema.
var (
	ResponseSchema_name = map[int32]string{
		0: "RESPONSE_SCHEMA_UNSPECIFIED",
		1: "RESPONSE_SCHEMA_HTTP",
		2: "RESPONSE_SCHEMA_SQS",
		3: "RESPONSE_SCHEMA_EVENT_BRIDGE",
	}
	ResponseSchema_value = map[string]int32{
		"RESPONSE_SCHEMA_UNSPECIFIED":  0,
		"RESPONSE_SCHEMA_HTTP":         1,
		"RESPONSE_SCHEMA_SQS":          2,
		"RESPONSE_SCHEMA_EVENT_BRIDGE": 3,
	}
)

func (x ResponseSchema) Enum() *ResponseSchema {
	p := new(ResponseSchema)
	*p = x
	return p
}

func (x ResponseSchema) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseSchema) Descriptor() protoreflect.EnumDescriptor {
	return file_unicom_api_v1_service_proto_enumTypes[0].Descriptor()
}

func (ResponseSchema) Type() protoreflect.EnumType {
	return &file_unicom_api_v1_service_proto_enumTypes[0]
}

func (x ResponseSchema) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseSchema.Descriptor instead.
func (ResponseSchema) EnumDescriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{0}
}

// / Represents a file attachment for email.
// / Either `data` or `url` must be provided.
type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the attachment file.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The raw file data as bytes. Optional if `url` is provided.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// An optional URL from which to download the attachment.
	Url *string `protobuf:"bytes,3,opt,name=url,proto3,oneof" json:"url,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Attachment) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

// / Specifies a channel to which responses should be sent.
type ResponseChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The schema/protocol for the response channel.
	Schema ResponseSchema `protobuf:"varint,1,opt,name=schema,proto3,enum=unicom.api.v1.ResponseSchema" json:"schema,omitempty"`
	// The URL or endpoint for the response channel.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ResponseChannel) Reset() {
	*x = ResponseChannel{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseChannel) ProtoMessage() {}

func (x *ResponseChannel) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseChannel.ProtoReflect.Descriptor instead.
func (*ResponseChannel) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseChannel) GetSchema() ResponseSchema {
	if x != nil {
		return x.Schema
	}
	return ResponseSchema_RESPONSE_SCHEMA_UNSPECIFIED
}

func (x *ResponseChannel) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// / Represents an event sent as a response, containing workflow status.
type ResponseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workflow ID associated with this event.
	WorkflowId string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// The current status of the workflow (e.g., "SUCCEEDED", "FAILED").
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// An optional error message if the workflow failed.
	ErrorMessage *string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
}

func (x *ResponseEvent) Reset() {
	*x = ResponseEvent{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEvent) ProtoMessage() {}

func (x *ResponseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEvent.ProtoReflect.Descriptor instead.
func (*ResponseEvent) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ResponseEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ResponseEvent) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// / Represents an email request, including recipients, subject, body, and attachments.
type EmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The recipient's email address.
	ToAddress string `protobuf:"bytes,1,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// The sender's email address.
	FromAddress string `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// The HTML body of the email.
	Html string `protobuf:"bytes,3,opt,name=html,proto3" json:"html,omitempty"`
	// The subject of the email.
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	// A list of attachments to include in the email.
	Attachments []*Attachment `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *EmailRequest) Reset() {
	*x = EmailRequest{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRequest) ProtoMessage() {}

func (x *EmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRequest.ProtoReflect.Descriptor instead.
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *EmailRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *EmailRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *EmailRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *EmailRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailRequest) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

// / Represents content in multiple languages.
type LanguageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Arabic version of the content.
	Arabic string `protobuf:"bytes,1,opt,name=arabic,proto3" json:"arabic,omitempty"`
	// The English version of the content.
	English string `protobuf:"bytes,2,opt,name=english,proto3" json:"english,omitempty"`
}

func (x *LanguageContent) Reset() {
	*x = LanguageContent{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LanguageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageContent) ProtoMessage() {}

func (x *LanguageContent) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageContent.ProtoReflect.Descriptor instead.
func (*LanguageContent) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *LanguageContent) GetArabic() string {
	if x != nil {
		return x.Arabic
	}
	return ""
}

func (x *LanguageContent) GetEnglish() string {
	if x != nil {
		return x.English
	}
	return ""
}

// / Represents a push notification request.
type PushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique idempotency key (must be a valid UUID v4).
	IdempotencyKey string `protobuf:"bytes,1,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	// The external customer ID to whom the notification is sent.
	ExternalCustomerId string `protobuf:"bytes,2,opt,name=external_customer_id,json=externalCustomerId,proto3" json:"external_customer_id,omitempty"`
	// The main content of the notification in multiple languages.
	Content *LanguageContent `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// The heading/title of the notification in multiple languages.
	Heading *LanguageContent `protobuf:"bytes,4,opt,name=heading,proto3" json:"heading,omitempty"`
	// An optional subtitle for the notification in multiple languages.
	SubTitle *LanguageContent `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *PushRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *PushRequest) GetExternalCustomerId() string {
	if x != nil {
		return x.ExternalCustomerId
	}
	return ""
}

func (x *PushRequest) GetContent() *LanguageContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *PushRequest) GetHeading() *LanguageContent {
	if x != nil {
		return x.Heading
	}
	return nil
}

func (x *PushRequest) GetSubTitle() *LanguageContent {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

// / Request to send a communication (email or push notification).
type SendCommunicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, the request is processed asynchronously.
	IsAsync bool `protobuf:"varint,1,opt,name=is_async,json=isAsync,proto3" json:"is_async,omitempty"`
	// The time at which to send the communication. If in the past, sends immediately.
	SendAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`
	// The domain or context for the communication.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// Channels to which responses should be sent.
	ResponseChannels []*ResponseChannel `protobuf:"bytes,4,rep,name=response_channels,json=responseChannels,proto3" json:"response_channels,omitempty"`
	// Optional email request. Only one of `email` or `push` should be set.
	Email *EmailRequest `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// Optional push notification request. Only one of `email` or `push` should be set.
	Push *PushRequest `protobuf:"bytes,6,opt,name=push,proto3" json:"push,omitempty"`
}

func (x *SendCommunicationRequest) Reset() {
	*x = SendCommunicationRequest{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommunicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommunicationRequest) ProtoMessage() {}

func (x *SendCommunicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommunicationRequest.ProtoReflect.Descriptor instead.
func (*SendCommunicationRequest) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *SendCommunicationRequest) GetIsAsync() bool {
	if x != nil {
		return x.IsAsync
	}
	return false
}

func (x *SendCommunicationRequest) GetSendAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SendAt
	}
	return nil
}

func (x *SendCommunicationRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SendCommunicationRequest) GetResponseChannels() []*ResponseChannel {
	if x != nil {
		return x.ResponseChannels
	}
	return nil
}

func (x *SendCommunicationRequest) GetEmail() *EmailRequest {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *SendCommunicationRequest) GetPush() *PushRequest {
	if x != nil {
		return x.Push
	}
	return nil
}

// / Request for streaming communication (used for bidirectional streaming).
type StreamCommunicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The domain or context for the communication.
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Optional email request.
	Email *EmailRequest `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// Optional push notification request.
	Push *PushRequest `protobuf:"bytes,3,opt,name=push,proto3" json:"push,omitempty"`
}

func (x *StreamCommunicationRequest) Reset() {
	*x = StreamCommunicationRequest{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCommunicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCommunicationRequest) ProtoMessage() {}

func (x *StreamCommunicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCommunicationRequest.ProtoReflect.Descriptor instead.
func (*StreamCommunicationRequest) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *StreamCommunicationRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *StreamCommunicationRequest) GetEmail() *EmailRequest {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *StreamCommunicationRequest) GetPush() *PushRequest {
	if x != nil {
		return x.Push
	}
	return nil
}

// / Response containing the workflow ID for a sent communication.
type SendCommunicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique workflow ID assigned to the communication.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendCommunicationResponse) Reset() {
	*x = SendCommunicationResponse{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommunicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommunicationResponse) ProtoMessage() {}

func (x *SendCommunicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommunicationResponse.ProtoReflect.Descriptor instead.
func (*SendCommunicationResponse) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *SendCommunicationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// / Response containing the workflow ID for a streamed communication.
type StreamCommunicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique workflow ID assigned to the communication.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StreamCommunicationResponse) Reset() {
	*x = StreamCommunicationResponse{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCommunicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCommunicationResponse) ProtoMessage() {}

func (x *StreamCommunicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCommunicationResponse.ProtoReflect.Descriptor instead.
func (*StreamCommunicationResponse) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *StreamCommunicationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// / Request to get the status of a workflow by ID.
type GetStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workflow ID to query.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// / Response containing the status of a workflow.
type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current status of the workflow.
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_unicom_api_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unicom_api_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_unicom_api_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_unicom_api_v1_service_proto protoreflect.FileDescriptor

var file_unicom_api_v1_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x75,
	0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x0a, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c,
	0x22, 0x5a, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x84, 0x01, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6e, 0x69, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x43, 0x0a, 0x0f, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x22, 0x99, 0x02, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75,
	0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x4b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x31,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x75, 0x73,
	0x68, 0x22, 0x2b, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d,
	0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x86,
	0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x4d, 0x41, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f,
	0x53, 0x51, 0x53, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x42,
	0x52, 0x49, 0x44, 0x47, 0x45, 0x10, 0x03, 0x32, 0x86, 0x03, 0x0a, 0x0d, 0x55, 0x6e, 0x69, 0x63,
	0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x11, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f,
	0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2d, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a, 0x13,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x6e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e,
	0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x75, 0x6e, 0x69, 0x63, 0x6f,
	0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0xb0, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x69, 0x63, 0x6f, 0x6c, 0x6c, 0x2f, 0x75, 0x6e, 0x69, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x75, 0x6e, 0x69, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x55, 0x41, 0x58, 0xaa, 0x02, 0x0d, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x5c, 0x41,
	0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x5c, 0x41,
	0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0f, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_unicom_api_v1_service_proto_rawDescOnce sync.Once
	file_unicom_api_v1_service_proto_rawDescData = file_unicom_api_v1_service_proto_rawDesc
)

func file_unicom_api_v1_service_proto_rawDescGZIP() []byte {
	file_unicom_api_v1_service_proto_rawDescOnce.Do(func() {
		file_unicom_api_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_unicom_api_v1_service_proto_rawDescData)
	})
	return file_unicom_api_v1_service_proto_rawDescData
}

var file_unicom_api_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_unicom_api_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_unicom_api_v1_service_proto_goTypes = []any{
	(ResponseSchema)(0),                 // 0: unicom.api.v1.ResponseSchema
	(*Attachment)(nil),                  // 1: unicom.api.v1.Attachment
	(*ResponseChannel)(nil),             // 2: unicom.api.v1.ResponseChannel
	(*ResponseEvent)(nil),               // 3: unicom.api.v1.ResponseEvent
	(*EmailRequest)(nil),                // 4: unicom.api.v1.EmailRequest
	(*LanguageContent)(nil),             // 5: unicom.api.v1.LanguageContent
	(*PushRequest)(nil),                 // 6: unicom.api.v1.PushRequest
	(*SendCommunicationRequest)(nil),    // 7: unicom.api.v1.SendCommunicationRequest
	(*StreamCommunicationRequest)(nil),  // 8: unicom.api.v1.StreamCommunicationRequest
	(*SendCommunicationResponse)(nil),   // 9: unicom.api.v1.SendCommunicationResponse
	(*StreamCommunicationResponse)(nil), // 10: unicom.api.v1.StreamCommunicationResponse
	(*GetStatusRequest)(nil),            // 11: unicom.api.v1.GetStatusRequest
	(*GetStatusResponse)(nil),           // 12: unicom.api.v1.GetStatusResponse
	(*timestamppb.Timestamp)(nil),       // 13: google.protobuf.Timestamp
}
var file_unicom_api_v1_service_proto_depIdxs = []int32{
	0,  // 0: unicom.api.v1.ResponseChannel.schema:type_name -> unicom.api.v1.ResponseSchema
	1,  // 1: unicom.api.v1.EmailRequest.attachments:type_name -> unicom.api.v1.Attachment
	5,  // 2: unicom.api.v1.PushRequest.content:type_name -> unicom.api.v1.LanguageContent
	5,  // 3: unicom.api.v1.PushRequest.heading:type_name -> unicom.api.v1.LanguageContent
	5,  // 4: unicom.api.v1.PushRequest.sub_title:type_name -> unicom.api.v1.LanguageContent
	13, // 5: unicom.api.v1.SendCommunicationRequest.send_at:type_name -> google.protobuf.Timestamp
	2,  // 6: unicom.api.v1.SendCommunicationRequest.response_channels:type_name -> unicom.api.v1.ResponseChannel
	4,  // 7: unicom.api.v1.SendCommunicationRequest.email:type_name -> unicom.api.v1.EmailRequest
	6,  // 8: unicom.api.v1.SendCommunicationRequest.push:type_name -> unicom.api.v1.PushRequest
	4,  // 9: unicom.api.v1.StreamCommunicationRequest.email:type_name -> unicom.api.v1.EmailRequest
	6,  // 10: unicom.api.v1.StreamCommunicationRequest.push:type_name -> unicom.api.v1.PushRequest
	7,  // 11: unicom.api.v1.UnicomService.SendCommunication:input_type -> unicom.api.v1.SendCommunicationRequest
	8,  // 12: unicom.api.v1.UnicomService.StreamCommunication:input_type -> unicom.api.v1.StreamCommunicationRequest
	11, // 13: unicom.api.v1.UnicomService.GetStatus:input_type -> unicom.api.v1.GetStatusRequest
	9,  // 14: unicom.api.v1.UnicomService.SendCommunication:output_type -> unicom.api.v1.SendCommunicationResponse
	10, // 15: unicom.api.v1.UnicomService.StreamCommunication:output_type -> unicom.api.v1.StreamCommunicationResponse
	12, // 16: unicom.api.v1.UnicomService.GetStatus:output_type -> unicom.api.v1.GetStatusResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_unicom_api_v1_service_proto_init() }
func file_unicom_api_v1_service_proto_init() {
	if File_unicom_api_v1_service_proto != nil {
		return
	}
	file_unicom_api_v1_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_unicom_api_v1_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_unicom_api_v1_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_unicom_api_v1_service_proto_goTypes,
		DependencyIndexes: file_unicom_api_v1_service_proto_depIdxs,
		EnumInfos:         file_unicom_api_v1_service_proto_enumTypes,
		MessageInfos:      file_unicom_api_v1_service_proto_msgTypes,
	}.Build()
	File_unicom_api_v1_service_proto = out.File
	file_unicom_api_v1_service_proto_rawDesc = nil
	file_unicom_api_v1_service_proto_goTypes = nil
	file_unicom_api_v1_service_proto_depIdxs = nil
}
