{
  "swagger": "2.0",
  "info": {
    "title": "unicom/api/v1/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UnicomService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/unicom/v1/send-communication": {
      "post": {
        "summary": "Sends a communication (email or push notification).\nReturns the workflow ID for tracking.",
        "operationId": "UnicomService_SendCommunication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendCommunicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "/ Request to send a communication (email or push notification).",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendCommunicationRequest"
            }
          }
        ],
        "tags": [
          "UnicomService"
        ]
      }
    },
    "/unicom/v1/status/{id}": {
      "get": {
        "summary": "Gets the status of a communication workflow by ID.",
        "operationId": "UnicomService_GetStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The workflow ID to query.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UnicomService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Attachment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the attachment file."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The raw file data as bytes. Optional if `url` is provided."
        },
        "url": {
          "type": "string",
          "description": "An optional URL from which to download the attachment."
        }
      },
      "description": "/ Represents a file attachment for email.\n/ Either `data` or `url` must be provided."
    },
    "v1EmailRequest": {
      "type": "object",
      "properties": {
        "toAddress": {
          "type": "string",
          "description": "The recipient's email address."
        },
        "fromAddress": {
          "type": "string",
          "description": "The sender's email address."
        },
        "html": {
          "type": "string",
          "description": "The HTML body of the email."
        },
        "subject": {
          "type": "string",
          "description": "The subject of the email."
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          },
          "description": "A list of attachments to include in the email."
        }
      },
      "description": "/ Represents an email request, including recipients, subject, body, and attachments."
    },
    "v1GetStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The current status of the workflow."
        }
      },
      "description": "/ Response containing the status of a workflow."
    },
    "v1LanguageContent": {
      "type": "object",
      "properties": {
        "arabic": {
          "type": "string",
          "description": "The Arabic version of the content."
        },
        "english": {
          "type": "string",
          "description": "The English version of the content."
        }
      },
      "description": "/ Represents content in multiple languages."
    },
    "v1PushRequest": {
      "type": "object",
      "properties": {
        "idempotencyKey": {
          "type": "string",
          "description": "A unique idempotency key (must be a valid UUID v4)."
        },
        "externalCustomerId": {
          "type": "string",
          "description": "The external customer ID to whom the notification is sent."
        },
        "content": {
          "$ref": "#/definitions/v1LanguageContent",
          "description": "The main content of the notification in multiple languages."
        },
        "heading": {
          "$ref": "#/definitions/v1LanguageContent",
          "description": "The heading/title of the notification in multiple languages."
        },
        "subTitle": {
          "$ref": "#/definitions/v1LanguageContent",
          "description": "An optional subtitle for the notification in multiple languages."
        }
      },
      "description": "/ Represents a push notification request."
    },
    "v1ResponseChannel": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/v1ResponseSchema",
          "description": "The schema/protocol for the response channel."
        },
        "url": {
          "type": "string",
          "description": "The URL or endpoint for the response channel."
        }
      },
      "description": "/ Specifies a channel to which responses should be sent."
    },
    "v1ResponseSchema": {
      "type": "string",
      "enum": [
        "RESPONSE_SCHEMA_UNSPECIFIED",
        "RESPONSE_SCHEMA_HTTP",
        "RESPONSE_SCHEMA_SQS",
        "RESPONSE_SCHEMA_EVENT_BRIDGE"
      ],
      "default": "RESPONSE_SCHEMA_UNSPECIFIED",
      "description": "/ Enum describing the schema/protocol for response channels.\n\n - RESPONSE_SCHEMA_UNSPECIFIED: Default value. Should not be used.\n - RESPONSE_SCHEMA_HTTP: HTTP endpoint for responses.\n - RESPONSE_SCHEMA_SQS: AWS SQS queue for responses.\n - RESPONSE_SCHEMA_EVENT_BRIDGE: AWS EventBridge for responses."
    },
    "v1SendCommunicationRequest": {
      "type": "object",
      "properties": {
        "isAsync": {
          "type": "boolean",
          "description": "If true, the request is processed asynchronously."
        },
        "sendAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which to send the communication. If in the past, sends immediately."
        },
        "domain": {
          "type": "string",
          "description": "The domain or context for the communication."
        },
        "responseChannels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResponseChannel"
          },
          "description": "Channels to which responses should be sent."
        },
        "email": {
          "$ref": "#/definitions/v1EmailRequest",
          "description": "Optional email request. Only one of `email` or `push` should be set."
        },
        "push": {
          "$ref": "#/definitions/v1PushRequest",
          "description": "Optional push notification request. Only one of `email` or `push` should be set."
        }
      },
      "description": "/ Request to send a communication (email or push notification)."
    },
    "v1SendCommunicationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique workflow ID assigned to the communication."
        }
      },
      "description": "/ Response containing the workflow ID for a sent communication."
    },
    "v1StreamCommunicationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique workflow ID assigned to the communication."
        }
      },
      "description": "/ Response containing the workflow ID for a streamed communication."
    }
  }
}
